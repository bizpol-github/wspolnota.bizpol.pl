/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.com.bizpol.wspolnota.ui;

import java.awt.Color;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import pl.com.bizpol.wspolnota.core.Community;
import pl.com.bizpol.wspolnota.core.Country;
import pl.com.bizpol.wspolnota.util.BooleanCellEditor;
import pl.com.bizpol.wspolnota.util.BooleanCellRenderer;
import pl.com.bizpol.wspolnota.util.CommunityTableRenderer;
import pl.com.bizpol.wspolnota.util.CountryCellEditor;
import pl.com.bizpol.wspolnota.util.CountryCellRenderer;
import pl.com.bizpol.wspolnota.util.SearchTableSorter;

/**
 *
 * @author netcom
 */
public class CommunityIFrame extends javax.swing.JInternalFrame {
    
    /**
     *
     */
    public Community community;
    

    /**
     *
     */
    public SearchTableSorter sorter;

    /**
     *
     */
    public boolean dynamicSearch = true;

    /**
     *
     */
    public MainWindow mainWindow;

    /**
     *
     */
    public boolean isOpened = false;

    /**
     * Creates new form CopmmunityIFrame
     * @param community
     * @param parent
     * @throws java.lang.Exception
     */
    public CommunityIFrame(Community community, MainWindow parent) throws Exception {
        this.mainWindow =  parent;
        this.community = community;
        this.community.setIsOpened(true);
        initComponents();
        
        this.setIFrameTitle(this.community.getShortName());
        titleLabel.setText(community.getName());
        addressLabel.setText(community.getStreet() + " " + community.getStreetNo() + ", " + community.getCityId() + ", " + community.getCountry());
        
        CommunityTableModel model = new CommunityTableModel(community);
        communityTable.setModel(model);            
//        communityTable.getColumnModel().getColumn(0).setPreferredWidth(200);
//        communityTable.getColumnModel().getColumn(1).setPreferredWidth(300);
        communityTable.setRowHeight(22);
        //set country combobox renderer and editor
        communityTable.setDefaultEditor(Country.class, new CountryCellEditor(mainWindow.countries.getCountriesComboBox()));
        communityTable.setDefaultRenderer(Country.class, new CountryCellRenderer());
        //set boolean combobox renderer and editor
        communityTable.setDefaultEditor(Boolean.class, new BooleanCellEditor(mainWindow.countries.getCountriesComboBox()));
        communityTable.setDefaultRenderer(Boolean.class, new BooleanCellRenderer());
        
        
        communityTable.setDefaultRenderer(Object.class, new CommunityTableRenderer());
        
        sorter = new SearchTableSorter(communityTable, model);
        sorter.sort("");
        
        dynamicChBox.setSelected(dynamicSearch);
        
       // populateTable(community);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        confirmButton = new javax.swing.JButton();
        discardButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        dynamicChBox = new javax.swing.JCheckBox();
        logButton = new javax.swing.JButton();
        addressLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        communityTable = new javax.swing.JTable(){
            @Override
            public TableCellRenderer getCellRenderer(int row, int column) {
                if (getValueAt(row, column) instanceof Boolean) {
                    return super.getDefaultRenderer(Boolean.class);
                } else if (getValueAt(row, column) instanceof Country) {
                    return super.getDefaultRenderer(Country.class);
                } else if (getValueAt(row, column) instanceof String) {
                    return super.getDefaultRenderer(Object.class);
                } else{
                    return super.getCellRenderer(row, column);
                }
            }

            @Override
            public TableCellEditor getCellEditor(int row, int column) {
                if (getValueAt(row, column) instanceof Boolean) {
                    return super.getDefaultEditor(Boolean.class);
                } else if (getValueAt(row, column) instanceof Country) {
                    return super.getDefaultEditor(Country.class);
                } else if (getValueAt(row, column) instanceof String) {
                    return super.getDefaultEditor(Object.class);
                } else{
                    return super.getCellEditor(row, column);
                }
            }
        };

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Wsp√≥lnota");
        setFocusTraversalPolicyProvider(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/com/bizpol/wspolnota/icons/cc/black/png/home_icon&16.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(131, 81, 31));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/com/bizpol/wspolnota/icons/cc/black/png/home_icon&48.png"))); // NOI18N

        confirmButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/com/bizpol/wspolnota/icons/cc/black/png/checkmark_icon&16.png"))); // NOI18N
        confirmButton.setDisabledSelectedIcon(null);
        confirmButton.setEnabled(false);

        discardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/com/bizpol/wspolnota/icons/cc/black/png/delete_icon&16.png"))); // NOI18N

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/com/bizpol/wspolnota/icons/cc/black/png/zoom_icon&16.png"))); // NOI18N
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        searchField.setForeground(new java.awt.Color(189, 189, 189));
        searchField.setText("Szukaj ...");
        searchField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFieldFocusLost(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("community");
        titleLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        titleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        titleLabel.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        dynamicChBox.setText("Wyszukiwanie dynamiczne");
        dynamicChBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dynamicChBoxActionPerformed(evt);
            }
        });

        logButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pl/com/bizpol/wspolnota/icons/cc/black/png/doc_lines_icon&16.png"))); // NOI18N
        logButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logButtonActionPerformed(evt);
            }
        });

        addressLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addressLabel.setText("address");
        addressLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 437, Short.MAX_VALUE)
                        .addComponent(logButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(confirmButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(discardButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(dynamicChBox)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(dynamicChBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(confirmButton)
                            .addComponent(discardButton)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton3)
                                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(logButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setBorder(null);

        communityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Dane", "Warto≈õƒá", "Akcja"
            }
        ));
        communityTable.setCellSelectionEnabled(true);
        jScrollPane1.setViewportView(communityTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("tab1", jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        this.community.setIsOpened(false);
        System.out.println(community.getIsOpened());
    }//GEN-LAST:event_formInternalFrameClosing

    private void searchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyPressed
        // TODO add your handling code here:
        String text = searchField.getText();
        System.out.println(text);
        if (text.equals("Szukaj ...")){
            searchField.setText("");
            searchField.setForeground(Color.black);
        }
        
    }//GEN-LAST:event_searchFieldKeyPressed

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        // TODO add your handling code here:
        if (dynamicSearch){
            String text = searchField.getText();
            sorter.sort(text);
        }
    }//GEN-LAST:event_searchFieldKeyReleased

    private void searchFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusGained
        // TODO add your handling code here:
        String text = searchField.getText();
        System.out.println(text);
        if (text.equals("Szukaj ...")){
            searchField.setText("");
            searchField.setForeground(Color.black);
        }
    }//GEN-LAST:event_searchFieldFocusGained

    private void searchFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusLost
        // TODO add your handling code here:
        String text = searchField.getText();
        if (text.isEmpty()){
            searchField.setText("Szukaj ...");
            searchField.setForeground(Color.gray);
        }
    }//GEN-LAST:event_searchFieldFocusLost

    private void dynamicChBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dynamicChBoxActionPerformed
        // TODO add your handling code here:
        dynamicSearch = dynamicChBox.isSelected();
        
        if(!dynamicSearch){
            sorter.sort("");
            searchField.setText("Szukaj ...");
            searchField.setForeground(Color.gray);
        }
    }//GEN-LAST:event_dynamicChBoxActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        if (!dynamicSearch){
            String text = searchField.getText();
            if (text.equals("Szukaj ...")){
                text = "";
            }
            sorter.sort(text);
        }
    }//GEN-LAST:event_jButton3MouseClicked

    private void logButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("przycisk log");
        
        LogJDialog logDialog = new LogJDialog(mainWindow, true, community.getId(), "community");
        logDialog.setVisible(true);
        
    }//GEN-LAST:event_logButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTable communityTable;
    private javax.swing.JButton confirmButton;
    private javax.swing.JButton discardButton;
    private javax.swing.JCheckBox dynamicChBox;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton logButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
    
    /**
     *
     * @param title
     */
    public final void setIFrameTitle(String title){
       this.setTitle(title);
    }
    
    /**
     *
     * @return
     */
    public Community getCommunity(){
        return this.community;
    }
    
    /**
     *
     * @param community
     */
    public void setCommunity(Community community){
        this.community = community;
    }
    
    /**
     *
     * @return
     */
    public boolean getIsOpened () {
        return this.isOpened;
    }
    
    /**
     *
     * @param state
     */
    public void setIsOpened (boolean state) {
        this.isOpened = state;
    }

}
