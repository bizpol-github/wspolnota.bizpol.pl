/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.com.bizpol.wspolnota.ui;

import java.awt.Rectangle;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import pl.com.bizpol.wspolnota.core.Community;
import javax.swing.tree.TreePath;
import pl.com.bizpol.wspolnota.core.Countries;
import pl.com.bizpol.wspolnota.dao.CommunityDAO;
import pl.com.bizpol.wspolnota.dao.UserDAO;
import pl.com.bizpol.wspolnota.util.CommunityTreeModel;
import pl.com.bizpol.wspolnota.util.ComunityTreeRenderer;

/**
 *
 * @author Archii
 */
public final class PropertyPanel extends javax.swing.JPanel {

    /**
     * Creates new form PropertyPanel
     */
    List<Community> communityList = new ArrayList<>();    
    CommunityTreeModel communityModel;
    MainWindow mainWindow;
    Countries countries;
    
    /**
     *
     * @param parent
     * @throws java.lang.Exception
     */
    public PropertyPanel(java.awt.Frame parent) throws Exception {   
        
        mainWindow = (MainWindow) parent;
        countries = mainWindow.getCountries();
        
        initComponents();
        
        //pobieram dane mysql do zmiennej cList
        getTreeMysqlData();
        
        
        jTree1.setModel(new CommunityTreeModel(communityList));
                
       // jTree1.setShowsRootHandles(true);
        // ustawianie icon tekstu dla drzewa        
        jTree1.setCellRenderer(new ComunityTreeRenderer());
        
        jToolBar1.add(countries.getCountriesComboBox());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();

        jToolBar1.setRollover(true);

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setDividerSize(3);
        jSplitPane1.setMinimumSize(new java.awt.Dimension(5, 25));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 476, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 475, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(jDesktopPane1);

        jScrollPane1.setBorder(null);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(20, 322));

        jTree1.setBackground(new java.awt.Color(255, 255, 102));
        jTree1.setModel(communityModel);
        jTree1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        jSplitPane1.setLeftComponent(jScrollPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        // TODO add your handling code here:
        
        if (!jTree1.isSelectionEmpty()) {          
            TreePath path = (TreePath) jTree1.getSelectionPath();
            
            Object obj = path.getLastPathComponent();
            
            if (obj instanceof Community) {
                Community comm = (Community) obj;
                
                if (!comm.getIsOpened()) {                
                Rectangle b = jDesktopPane1.getBounds();
                CommunityIFrame communityIFrame = null;
                    try {
                        communityIFrame = new CommunityIFrame((Community) obj, mainWindow);
                    } catch (Exception ex) {
                        Logger.getLogger(PropertyPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                jDesktopPane1.add(communityIFrame);
                communityIFrame.setBounds(b);
                communityIFrame.setLocation(0, 0);
                communityIFrame.setVisible(true);
                communityIFrame.setIsOpened(true);
                communityIFrame.requestFocusInWindow();
                communityIFrame.repaint();    
                } else {
                    CommunityIFrame frame = getCommunityIFrame(comm);
                    if(frame.isIcon()){
                        try {
                            frame.setIcon(false);
                            frame.setSelected(true);
                        } catch (PropertyVetoException ex) {
                            Logger.getLogger(PropertyPanel.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
            
            System.out.println("path: " + path + " obj: " + obj);
            

        }
        
    }//GEN-LAST:event_jTree1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
    
    /**
     *
     */
    public void getTreeMysqlData() {

        try {            
            CommunityDAO cDAO = new CommunityDAO();            
            communityList = cDAO.getAllCommunities();  
            
        } catch (Exception ex) {
            Logger.getLogger(UserDAO.class.getName()).log(Level.SEVERE, "Błąd połączenia", ex);
        }

    }
     
    /**
     *
     * @param comm
     * @return
     */
    public CommunityIFrame getCommunityIFrame(Community comm){
        JInternalFrame[] frames = jDesktopPane1.getAllFrames();
        CommunityIFrame frame = null;         
         
        for (JInternalFrame fr : frames) {
            CommunityIFrame f = (CommunityIFrame)fr;
            if (f.getCommunity().equals(comm)) {                
                frame = (CommunityIFrame) fr;
                break;                
            }             
        }         
        return frame;
    }
}
